[Modules]
AssetCaching = "FlotsamAssetCache"

[AssetCache]
;;
;; Options for FlotsamAssetCache
;;

;; cache directory can be shared by multiple instances
;; Default >> CacheDirectory = ../Data/AssetCache
CacheDirectory = 

; Other examples:
;CacheDirectory = /directory/writeable/by/WhiteCoreSim/instance

; Log level
; 0 - (Error) Errors only
; 1 - (Info)  Hit Rate Stats + Level 0
; 2 - (Debug) Cache Activity (Reads/Writes) + Level 1
;
LogLevel = 1

; How often should hit rates be displayed (given in AssetRequests)
; 0 to disable
HitRateDisplay = 0

; Set to false for disk cache only.
MemoryCacheEnabled = false

; How long {in hours} to keep assets cached in memory, .5 == 30 minutes
; Optimization: for VPS or limited memory system installs set Timeout to .016 (1 minute)
; increases performance without large memory impact
MemoryCacheTimeout = 2

; How long {in hours} to keep assets cached on disk, .5 == 30 minutes
; Specify 0 if you do not want your disk cache to expire
FileCacheTimeout = 24

; How often {in hours} should the disk be checked for expired files
; Specify 0 to disable expiration checking 
; .166 ;roughly every 10 minutes
FileCleanupTimer = 1.0  ;every 1 hour

; If WAIT_ON_INPROGRESS_REQUESTS has been defined then this specifies how
; long (in milliseconds) to block a request thread while trying to complete
; an existing write to disk.
; WaitOnInprogressTimeout = 3000

; Number of tiers to use for cache directories (current valid
; range 1 to 3)
;CacheDirectoryTiers = 1

; Number of letters per path tier, 1 will create 16 directories
; per tier, 2 - 256, 3 - 4096 and 4 - 65K
;CacheDirectoryTierLength = 3

; Warning level for cache directory size
;CacheWarnAt = 30000

; Perform a deep scan of all assets within all regions, looking for all assets
; present or referenced.  Mark all assets found that are already present in the
; cache, and request all assets that are found that are not already cached (this
; will cause those assets to be cached)
;
; DeepScanBeforePurge = false
