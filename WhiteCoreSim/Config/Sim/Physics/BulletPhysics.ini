;;
;; Note:  BulletSim is not fully tested and still undergoing improvements
;;

[BulletSim]
;; World parameters

;; There are two bullet physics libraries, bulletunmanaged is the default and is a native c++ dll
;;  bulletxna is a managed C# dll.
;; They have compatible functionality..   the c++ is much faster.

BulletEngine = "bulletunmanaged"
; BulletEngine = "bulletxna"

;; Terrain Implementation {1|0} 0 for HeightField, 1 for Mesh terrain.
;;  If you're using the bulletxna engine, you will want to switch to the height-field option
TerrainImplementation = 0

Gravity = -9.80665

TerrainFriction = 0.30
TerrainHitFraction = 0.8
TerrainRestitution = 0
TerrainCollisionMargin = 0.04

AvatarFriction = 0.2
AvatarStandingFriction = 0.95
AvatarRestitution = 0.0
AvatarDensity = 3.5
AvatarCapsuleWidth = 0.6
AvatarCapsuleDepth = 0.45
AvatarCapsuleHeight = 1.5
AvatarContactProcessingThreshold = 0.1

MaxObjectMass = 10000.01

CollisionMargin = 0.04

; Linkset implementation
; 0 = constraint: linkset tied together with constraints
; 1 = compound: linkset tied together as a compound object (default)
; 2 = manual: linkset tied together manually (code moves all the pieces)
LinksetImplementation = 1  ; 0 = constraint, 1 = compound, 2 = manual

; Whether to mesh sculpts
MeshSculptedPrim = false

; If 'true', force simple prims (box and sphere) to be meshed
ForceSimplePrimMeshing = false

; Bullet step parameters
MaxSubSteps = 10
FixedTimeStep = .01667

MaxCollisionsPerFrame = 2048
MaxUpdatesPerFrame = 8192

; Detailed physics debug logging
PhysicsLoggingEnabled = False
PhysicsLoggingDir = "."
VehicleLoggingEnabled = False
